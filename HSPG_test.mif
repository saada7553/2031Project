WIDTH=16;
DEPTH=2048;

ADDRESS_RADIX=HEX;
DATA_RADIX=HEX;

CONTENT BEGIN
0000: BFFF; -- 	LOADI -1
0001: 9850; -- 	OUT HSPG_SEL
0002: B800; -- 	LOADI 0
0003: 9852; -- 	OUT HSPG_MIN_POS
0004: B87F; -- 	LOADI 127
0005: 9853; -- 	OUT HSPG_MAX_POS
0006: B800; -- 	LOADI 0
0007: 9850; -- 	OUT HSPG_SEL
0008: 08C4; -- 	LOAD Manual_Spd_0
0009: 9854; -- 	OUT HSPG_ROT_TIME
000A: B801; -- 	LOADI 1
000B: 9850; -- 	OUT HSPG_SEL
000C: 08C5; -- 	LOAD Manual_Spd_1
000D: 9854; -- 	OUT HSPG_ROT_TIME
000E: B802; -- 	LOADI 2
000F: 9850; -- 	OUT HSPG_SEL
0010: 08C6; -- 	LOAD Manual_Spd_2
0011: 9854; -- 	OUT HSPG_ROT_TIME
0012: B803; -- 	LOADI 3
0013: 9850; -- 	OUT HSPG_SEL
0014: 08C7; -- 	LOAD Manual_Spd_3
0015: 9854; -- 	OUT HSPG_ROT_TIME
0016: B800; -- 	LOADI 0
0017: 9850; -- 	OUT HSPG_SEL
0018: 28EA; -- 	JUMP UpdateLoop
0019: 0004; -- NumServos: DW 4
001A: 01F4; -- 	DW 500
001B: 0208; -- 	DW 520
001C: 021C; -- 	DW 540
001D: 0230; -- 	DW 560
001E: 023A; -- 	DW 570
001F: 0244; -- 	DW 580
0020: 024E; -- 	DW 590
0021: 0262; -- 	DW 610
0022: 026C; -- 	DW 620
0023: 0064; -- FanWaitTicksMax: DW 100
0024: 0258; -- 	DW 600
0025: 02BC; -- 	DW 700
0026: 0000; -- ServoIndex: DW 0
0027: 0000; -- TempFanPtr: DW 0
0028: 0000; -- TempFanSetInput: DW 0
0029: 8051; -- 	CALL GetFanIndex
002A: 1824; -- 	ADD FanPosArr
002B: 1027; -- 	STORE TempFanPtr
002C: 7027; -- 	ILOAD TempFanPtr
002D: 8800; -- 	RETURN
002E: 8051; -- 	CALL GetFanIndex
002F: 1825; -- 	ADD FanSpeedArr
0030: 1027; -- 	STORE TempFanPtr
0031: 7027; -- 	ILOAD TempFanPtr
0032: 8800; -- 	RETURN
0033: 80CB; -- 	CALL GetSpeedIndex
0034: 181D; -- 	ADD ManualSpeedArr
0035: 1027; -- 	STORE TempFanPtr
0036: 7027; -- 	ILOAD TempFanPtr
0037: 8800; -- 	RETURN
0038: 80CB; -- 	CALL GetSpeedIndex
0039: 181E; -- 	ADD NonManualSpeedArr
003A: 1027; -- 	STORE TempFanPtr
003B: 7027; -- 	ILOAD TempFanPtr
003C: 8800; -- 	RETURN
003D: 80CF; -- 	CALL GetRangeIndex
003E: 181F; -- 	ADD MinRangeArr
003F: 1027; -- 	STORE TempFanPtr
0040: 7027; -- 	ILOAD TempFanPtr
0041: 8800; -- 	RETURN
0042: 80CF; -- 	CALL GetRangeIndex
0043: 1820; -- 	ADD MaxRangeArr
0044: 1027; -- 	STORE TempFanPtr
0045: 7027; -- 	ILOAD TempFanPtr
0046: 8800; -- 	RETURN
0047: 80CF; -- 	CALL GetRangeIndex
0048: 1821; -- 	ADD ManualMinRangeArr
0049: 1027; -- 	STORE TempFanPtr
004A: 7027; -- 	ILOAD TempFanPtr
004B: 8800; -- 	RETURN
004C: 80CF; -- 	CALL GetRangeIndex
004D: 1822; -- 	ADD ManualMaxRangeArr
004E: 1027; -- 	STORE TempFanPtr
004F: 7027; -- 	ILOAD TempFanPtr
0050: 8800; -- 	RETURN
0051: 0826; -- 	LOAD ServoIndex
0052: 181A; -- 	ADD FanIndexArr
0053: 1027; -- 	STORE TempFanPtr
0054: 7027; -- 	ILOAD TempFanPtr
0055: 8800; -- 	RETURN
0056: 1028; -- 	STORE TempFanSetInput
0057: 0826; -- 	LOAD ServoIndex
0058: 181A; -- 	ADD FanIndexArr
0059: 1027; -- 	STORE TempFanPtr ; addr
005A: 0828; -- 	LOAD TempFanSetInput ; ac = val
005B: 7827; -- 	ISTORE TempFanPtr ; addr
005C: 8800; -- 	RETURN
005D: 0826; -- 	LOAD ServoIndex
005E: 181B; -- 	ADD FanWaitTickArr
005F: 1027; -- 	STORE TempFanPtr
0060: 7027; -- 	ILOAD TempFanPtr
0061: 8800; -- 	RETURN
0062: 1028; -- 	STORE TempFanSetInput
0063: 0826; -- 	LOAD ServoIndex
0064: 181B; -- 	ADD FanWaitTickArr
0065: 1027; -- 	STORE TempFanPtr ; addr
0066: 0828; -- 	LOAD TempFanSetInput ; ac = val
0067: 7827; -- 	ISTORE TempFanPtr ; addr
0068: 8800; -- 	RETURN
0069: 0826; -- 	LOAD ServoIndex
006A: 181C; -- 	ADD ModeArr
006B: 1027; -- 	STORE TempFanPtr
006C: 7027; -- 	ILOAD TempFanPtr
006D: 8800; -- 	RETURN
006E: 1028; -- 	STORE TempFanSetInput
006F: 0826; -- 	LOAD ServoIndex
0070: 181C; -- 	ADD ModeArr
0071: 1027; -- 	STORE TempFanPtr ; addr
0072: 0828; -- 	LOAD TempFanSetInput ; ac = val
0073: 7827; -- 	ISTORE TempFanPtr ; addr
0074: 8800; -- 	RETURN
0075: 1026; -- 	STORE ServoIndex
0076: 9850; -- 	OUT HSPG_SEL
0077: 8069; -- 	CALL GetMode
0078: 407A; -- 	JZERO Update_TL_Manual ; mode == 0 --> manual
0079: 287C; -- 	JUMP Update_TL_Fan     ; mode != 0 --> fan
007A: 807F; -- 		CALL UpdateManual
007B: 287E; -- 		JUMP Update_TL_Done
007C: 8088; -- 		CALL UpdateFan
007D: 287E; -- 		JUMP Update_TL_Done
007E: 8800; -- 	RETURN
007F: 0826; -- 	LOAD ServoIndex
0080: 9850; -- 	OUT HSPG_SEL
0081: 80D7; -- 	CALL IsCurrentSelected
0082: 4087; -- 	JZERO ManualNotSelected
0083: 08E9; -- 		LOAD SwitchVal
0084: 48C0; -- 		AND Mask_Pos
0085: 9851; -- 		OUT HSPG_POS
0086: 9801; -- 		OUT LEDs
0087: 8800; -- 	RETURN
0088: 0826; -- 	LOAD ServoIndex
0089: 9850; -- 	OUT HSPG_SEL
008A: 8029; -- 	CALL GetFanPos
008B: 9851; -- 	OUT HSPG_POS
008C: 9801; -- 	OUT LEDs
008D: 0826; -- 	LOAD ServoIndex 
008E: 9850; -- 	OUT HSPG_SEL
008F: 9055; -- 	IN HSPG_DONE
0090: 409A; -- 	JZERO NoIncFan
0091: 8051; -- 			CALL GetFanIndex
0092: 6801; -- 			ADDI 1 ; fan_idx++
0093: 2252; -- 			SUB FanPosCount
0094: 4096; -- 			JZERO WrapFan
0095: 2898; -- 			JUMP SkipWrapFan
0096: B800; -- 				LOADI 0
0097: 2899; -- 				JUMP FanIndexDone
0098: 1A52; -- 				ADD FanPosCount
0099: 8056; -- 			CALL SetFanIndex
009A: 8800; -- 	RETURN
009B: 08E9; -- 	LOAD SwitchVal
009C: 48C1; -- 	AND Mask_FanMode
009D: 8800; -- 	RETURN
009E: 0826; -- 	LOAD ServoIndex
009F: 9850; -- 	OUT HSPG_SEL
00A0: 8038; -- 	CALL GetNonManualSpeed
00A1: 9854; -- 	OUT HSPG_ROT_TIME
00A2: 803D; -- 	CALL GetMinRange
00A3: 9852; -- 	OUT HSPG_MIN_POS
00A4: 8042; -- 	CALL GetMaxRange
00A5: 9853; -- 	OUT HSPG_MAX_POS
00A6: 8800; -- 	RETURN
00A7: 0826; -- 	LOAD ServoIndex
00A8: 9850; -- 	OUT HSPG_SEL
00A9: 8033; -- 	CALL GetManualSpeed
00AA: 9854; -- 	OUT HSPG_ROT_TIME
00AB: 8047; -- 	CALL GetManualMinRange
00AC: 9852; -- 	OUT HSPG_MIN_POS
00AD: 804C; -- 	CALL GetManualMaxRange
00AE: 9853; -- 	OUT HSPG_MAX_POS
00AF: 8800; -- 	RETURN
00B0: 80DE; -- 	CALL IsCommit
00B1: 40BC; -- 	JZERO NoConfigCommit
00B2: 80D3; -- 		CALL GetSel
00B3: 1026; -- 		STORE ServoIndex
00B4: 809B; -- 		CALL GetModeBit
00B5: 806E; -- 		CALL SetMode
00B6: 809B; -- 		CALL GetModeBit
00B7: 40BA; -- 		JZERO ConfigManualMode
00B8: 809E; -- 			CALL DoConfigFan
00B9: 28BC; -- 			JUMP NoConfigCommit
00BA: 80A7; -- 			CALL DoConfigManual
00BB: 28BC; -- 			JUMP NoConfigCommit
00BC: 8800; -- 	RETURN
00BD: 0200; -- Mask_Config: DW &B1000000000
00BE: 0040; -- Mask_ConfigCommit: DW &B0001000000
00BF: 0180; -- Mask_Sel: DW &B0110000000
00C0: 007F; -- Mask_Pos: DW &B0001111111
00C1: 0001; -- Mask_FanMode: DW &B0000000001
00C2: 0006; -- Mask_Speed: DW &B0000000110
00C3: 0018; -- Mask_Range: DW &B0000011000
00C4: 0000; -- Manual_Spd_0: DW 0
00C5: 01F4; -- Manual_Spd_1: DW 500
00C6: 03E8; -- Manual_Spd_2: DW 1000
00C7: 07D0; -- Manual_Spd_3: DW 2000
00C8: 08E9; -- 	LOAD SwitchVal
00C9: 48BD; -- 	AND Mask_Config
00CA: 8800; -- 	RETURN
00CB: 08E9; -- 	LOAD SwitchVal
00CC: 48C2; -- 	AND Mask_Speed
00CD: 6011; -- 	SHIFT -1
00CE: 8800; -- 	RETURN
00CF: 08E9; -- 	LOAD SwitchVal
00D0: 48C3; -- 	AND Mask_Range
00D1: 6013; -- 	SHIFT -3
00D2: 8800; -- 	RETURN
00D3: 08E9; -- 	LOAD SwitchVal
00D4: 48BF; -- 	AND Mask_Sel
00D5: 6017; -- 	SHIFT -7
00D6: 8800; -- 	RETURN
00D7: 80D3; -- 	CALL GetSel
00D8: 2026; -- 	SUB ServoIndex
00D9: 40DC; -- 	JZERO ItIsSelected
00DA: B800; -- 		LOADI 0
00DB: 8800; -- 		RETURN
00DC: B801; -- 		LOADI 1
00DD: 8800; -- 		RETURN
00DE: 08E9; -- 	LOAD SwitchVal
00DF: 48BE; -- 	AND Mask_ConfigCommit
00E0: 40E3; -- 	JZERO DoNotCommit
00E1: B801; -- 		LOADI 1
00E2: 8800; -- 		RETURN
00E3: B800; -- 		LOADI 0
00E4: 8800; -- 		RETURN
00E5: 08E9; -- 	LOAD SwitchVal
00E6: 48BF; -- 	AND Mask_Sel
00E7: 6017; -- 	SHIFT -7
00E8: 8800; -- 	RETURN
00E9: 0000; -- SwitchVal: DW 0
00EA: 9000; -- 	IN SWITCHES
00EB: 10E9; -- 	STORE SwitchVal
00EC: 80C8; -- 	CALL IsConfigMode
00ED: 30F0; -- 	JNEG Update_LP_Config
00EE: 38F0; -- 	JPOS Update_LP_Config
00EF: 28F2; -- 	JUMP Update_LP_Update
00F0: 80B0; -- 		CALL UpdateConfigMode
00F1: 28FB; -- 		JUMP Update_LP_Done
00F2: B800; -- 		LOADI 0
00F3: 8075; -- 		CALL UpdateServo
00F4: B801; -- 		LOADI 1
00F5: 8075; -- 		CALL UpdateServo
00F6: B802; -- 		LOADI 2
00F7: 8075; -- 		CALL UpdateServo
00F8: B803; -- 		LOADI 3
00F9: 8075; -- 		CALL UpdateServo
00FA: 28FB; -- 		JUMP Update_LP_Done
00FB: 28EA; -- 	JUMP UpdateLoop
[00FC..01F3] : 0000; -- [empty memory]
01F4: 0000; -- 	DW 0
01F5: 0000; -- 	DW 0
01F6: 0000; -- 	DW 0
01F7: 0000; -- 	DW 0
[01F8..0207] : 0000; -- [empty memory]
0208: 0000; -- 	DW 0
0209: 0000; -- 	DW 0
020A: 0000; -- 	DW 0
020B: 0000; -- 	DW 0
[020C..021B] : 0000; -- [empty memory]
021C: 0000; -- 	DW 0
021D: 0000; -- 	DW 0
021E: 0000; -- 	DW 0
021F: 0000; -- 	DW 0
[0220..022F] : 0000; -- [empty memory]
0230: 0000; -- 	DW 0
0231: 01F4; -- 	DW 500
0232: 03E8; -- 	DW 1000
0233: 07D0; -- 	DW 2000
[0234..0239] : 0000; -- [empty memory]
023A: 01F4; -- 	DW 500
023B: 03E8; -- 	DW 1000
023C: 05DC; -- 	DW 1500
023D: 07D0; -- 	DW 2000
[023E..0243] : 0000; -- [empty memory]
0244: 0000; -- 	DW 0
0245: 0000; -- 	DW 0
0246: FF9C; -- 	DW -100
0247: FFCE; -- 	DW -50
[0248..024D] : 0000; -- [empty memory]
024E: 0064; -- 	DW 100
024F: 00C8; -- 	DW 200
0250: 0064; -- 	DW 100
0251: 0096; -- 	DW 150
0252: 0002; -- FanPosCount: DW 2
[0253..0257] : 0000; -- [empty memory]
0258: 0000; -- 	DW 0
0259: 0064; -- 	DW 100
[025A..0261] : 0000; -- [empty memory]
0262: 0000; -- 	DW 0
0263: 0000; -- 	DW 0
0264: 0000; -- 	DW 0
0265: 0000; -- 	DW 0
[0266..026B] : 0000; -- [empty memory]
026C: 007F; -- 	DW 127
026D: 0001; -- 	DW 1
026E: 0003; -- 	DW 3
026F: 0100; -- 	DW 256
[0270..07FF] : 0000; -- [empty memory]
END;
